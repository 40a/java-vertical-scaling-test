
type: install
id: java-memory-usage-demo
name: Java Vertical Scaling
baseUrl: https://raw.githubusercontent.com/jelastic/java-vertical-scaling-test/master
homepage: https://github.com/jelastic/java-vertical-scaling-test
logo: /images/elastic-duke-70x70.png
description: |
  Java vertical scaling test:
  * G1
  * Shenandoah
  * ZGC @ Oracle OpenJDK
  * C4 @ Zing
  * OpenJ9
  * Serial
  * CMS
  * Epsilon
  * Parallel
globals:
  cloudlets: 26
  common: -Xmx3g -Xms32m -XX:+UseCompressedOops
nodes:
# Shenandoah isn't supported in zulujdk-11.0.4
# Unrecognized VM option 'UseShenandoahGC'
  # - nodeType: payara
  #   tag: 5.192-zulujdk-11.0.4
  #   nodeGroup: shenan
  #   cloudlets: ${globals.cloudlets}
  #   displayName: Shenandoah
  #   env:
  #     GC_DEF: ShenandoahGC
  #     _JAVA_OPTIONS: ${globals.common} -XX:+UnlockExperimentalVMOptions -XX:ShenandoahGCHeuristics=compact

  - nodeType: payara
    tag: 5.192-adoptopenjdk-11.0.4
    nodeGroup: zgc
    cloudlets: ${globals.cloudlets}
    displayName: ZGC @ Oracle OpenJDK
    #-XX:ZUncommitDelay=1 -XX:ZCollectionInterval=30 is very aggressive mode as well, similar to Shenandoah
    # -XX:ZUncommitDelay=1 isn't supported in adoptopenjdk-11.0.4
    env:
      GC_DEF: ZGC
      _JAVA_OPTIONS: ${globals.common} -XX:+UnlockExperimentalVMOptions -XX:ZCollectionInterval=30

onInstall:
 - deploy
actions:
  deploy:
  - forEach(env.nodes):
      jelastic.environment.deployment.DeployArchive:
        envName: ${env.name}
        nodeGroup: ${@i.nodeGroup}
        context : ROOT
        fileName: ROOT.war
        fileUrl : https://github.com/jelastic/java-vertical-scaling-test/raw/payara/webapp/target/ROOT.war
        delay: 30
